digraph {
	ranksep = 4.0
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] module.vpc.aws_db_subnet_group.database" [label = "module.vpc.aws_db_subnet_group.database", shape = "box"]
		"[root] module.vpc.aws_default_vpc.this" [label = "module.vpc.aws_default_vpc.this", shape = "box"]
		"[root] module.vpc.aws_eip.nat" [label = "module.vpc.aws_eip.nat", shape = "box"]
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache" [label = "module.vpc.aws_elasticache_subnet_group.elasticache", shape = "box"]
		"[root] module.vpc.aws_internet_gateway.this" [label = "module.vpc.aws_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_nat_gateway.this" [label = "module.vpc.aws_nat_gateway.this", shape = "box"]
		"[root] module.vpc.aws_redshift_subnet_group.redshift" [label = "module.vpc.aws_redshift_subnet_group.redshift", shape = "box"]
		"[root] module.vpc.aws_route.database_internet_gateway" [label = "module.vpc.aws_route.database_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.private_nat_gateway" [label = "module.vpc.aws_route.private_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway" [label = "module.vpc.aws_route.public_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route_table.database" [label = "module.vpc.aws_route_table.database", shape = "box"]
		"[root] module.vpc.aws_route_table.elasticache" [label = "module.vpc.aws_route_table.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table.intra" [label = "module.vpc.aws_route_table.intra", shape = "box"]
		"[root] module.vpc.aws_route_table.private" [label = "module.vpc.aws_route_table.private", shape = "box"]
		"[root] module.vpc.aws_route_table.public" [label = "module.vpc.aws_route_table.public", shape = "box"]
		"[root] module.vpc.aws_route_table.redshift" [label = "module.vpc.aws_route_table.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.database" [label = "module.vpc.aws_route_table_association.database", shape = "box"]
		"[root] module.vpc.aws_route_table_association.elasticache" [label = "module.vpc.aws_route_table_association.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table_association.intra" [label = "module.vpc.aws_route_table_association.intra", shape = "box"]
		"[root] module.vpc.aws_route_table_association.private" [label = "module.vpc.aws_route_table_association.private", shape = "box"]
		"[root] module.vpc.aws_route_table_association.public" [label = "module.vpc.aws_route_table_association.public", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift" [label = "module.vpc.aws_route_table_association.redshift", shape = "box"]
		"[root] module.vpc.aws_subnet.database" [label = "module.vpc.aws_subnet.database", shape = "box"]
		"[root] module.vpc.aws_subnet.elasticache" [label = "module.vpc.aws_subnet.elasticache", shape = "box"]
		"[root] module.vpc.aws_subnet.intra" [label = "module.vpc.aws_subnet.intra", shape = "box"]
		"[root] module.vpc.aws_subnet.private" [label = "module.vpc.aws_subnet.private", shape = "box"]
		"[root] module.vpc.aws_subnet.public" [label = "module.vpc.aws_subnet.public", shape = "box"]
		"[root] module.vpc.aws_subnet.redshift" [label = "module.vpc.aws_subnet.redshift", shape = "box"]
		"[root] module.vpc.aws_vpc.this" [label = "module.vpc.aws_vpc.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options.this" [label = "module.vpc.aws_vpc_dhcp_options.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options_association.this" [label = "module.vpc.aws_vpc_dhcp_options_association.this", shape = "box"]
		"[root] module.vpc.aws_vpc_endpoint.dynamodb" [label = "module.vpc.aws_vpc_endpoint.dynamodb", shape = "box"]
		"[root] module.vpc.aws_vpc_endpoint.s3" [label = "module.vpc.aws_vpc_endpoint.s3", shape = "box"]
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb" [label = "module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb", shape = "box"]
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.intra_s3" [label = "module.vpc.aws_vpc_endpoint_route_table_association.intra_s3", shape = "box"]
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb" [label = "module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb", shape = "box"]
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.private_s3" [label = "module.vpc.aws_vpc_endpoint_route_table_association.private_s3", shape = "box"]
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb" [label = "module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb", shape = "box"]
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.public_s3" [label = "module.vpc.aws_vpc_endpoint_route_table_association.public_s3", shape = "box"]
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this" [label = "module.vpc.aws_vpc_ipv4_cidr_block_association.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway.this" [label = "module.vpc.aws_vpn_gateway.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_attachment.this" [label = "module.vpc.aws_vpn_gateway_attachment.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private" [label = "module.vpc.aws_vpn_gateway_route_propagation.private", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public" [label = "module.vpc.aws_vpn_gateway_route_propagation.public", shape = "box"]
		"[root] module.vpc.data.aws_vpc_endpoint_service.dynamodb" [label = "module.vpc.data.aws_vpc_endpoint_service.dynamodb", shape = "box"]
		"[root] module.vpc.data.aws_vpc_endpoint_service.s3" [label = "module.vpc.data.aws_vpc_endpoint_service.s3", shape = "box"]
		"[root] provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_route.database_internet_gateway"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_route.private_nat_gateway"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_route.public_internet_gateway"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_route_table_association.database"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_route_table_association.elasticache"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_route_table_association.intra"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_route_table_association.private"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_route_table_association.public"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_route_table_association.redshift"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_vpc_endpoint_route_table_association.intra_s3"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_vpc_endpoint_route_table_association.private_s3"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_vpc_endpoint_route_table_association.public_s3"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.database_route_table_ids"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.database_subnet_group"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.database_subnets_cidr_blocks"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.default_network_acl_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.default_route_table_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.default_security_group_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.default_vpc_cidr_block"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.default_vpc_default_network_acl_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.default_vpc_default_route_table_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.default_vpc_default_security_group_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.default_vpc_enable_dns_hostnames"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.default_vpc_enable_dns_support"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.default_vpc_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.default_vpc_instance_tenancy"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.default_vpc_main_route_table_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.elasticache_route_table_ids"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.elasticache_subnet_group"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.elasticache_subnet_group_name"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.elasticache_subnets_cidr_blocks"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.igw_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.intra_route_table_ids"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.intra_subnets_cidr_blocks"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.nat_ids"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.natgw_ids"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.private_route_table_ids"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.private_subnets_cidr_blocks"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.public_route_table_ids"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.public_subnets_cidr_blocks"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.redshift_route_table_ids"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.redshift_subnet_group"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.redshift_subnets_cidr_blocks"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.vgw_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.vpc_cidr_block"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.vpc_enable_dns_hostnames"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.vpc_enable_dns_support"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.vpc_endpoint_dynamodb_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.vpc_endpoint_dynamodb_pl_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.vpc_endpoint_s3_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.vpc_endpoint_s3_pl_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.vpc_instance_tenancy"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.vpc_main_route_table_id"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] module.vpc.output.vpc_secondary_cidr_blocks"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] output.database_subnets"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] output.elasticache_subnets"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] output.intra_subnets"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] output.nat_public_ips"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] output.private_subnets"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] output.public_subnets"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] output.redshift_subnets"
		"[root] meta.count-boundary (count boundary fixup)" -> "[root] output.vpc_id"
		"[root] module.vpc.aws_db_subnet_group.database" -> "[root] module.vpc.aws_subnet.database"
		"[root] module.vpc.aws_db_subnet_group.database" -> "[root] module.vpc.var.create_database_subnet_group"
		"[root] module.vpc.aws_db_subnet_group.database" -> "[root] module.vpc.var.database_subnet_group_tags"
		"[root] module.vpc.aws_default_vpc.this" -> "[root] module.vpc.var.default_vpc_enable_classiclink"
		"[root] module.vpc.aws_default_vpc.this" -> "[root] module.vpc.var.default_vpc_enable_dns_hostnames"
		"[root] module.vpc.aws_default_vpc.this" -> "[root] module.vpc.var.default_vpc_enable_dns_support"
		"[root] module.vpc.aws_default_vpc.this" -> "[root] module.vpc.var.default_vpc_name"
		"[root] module.vpc.aws_default_vpc.this" -> "[root] module.vpc.var.default_vpc_tags"
		"[root] module.vpc.aws_default_vpc.this" -> "[root] module.vpc.var.manage_default_vpc"
		"[root] module.vpc.aws_default_vpc.this" -> "[root] module.vpc.var.tags"
		"[root] module.vpc.aws_default_vpc.this" -> "[root] provider.aws"
		"[root] module.vpc.aws_eip.nat" -> "[root] module.vpc.local.nat_gateway_count"
		"[root] module.vpc.aws_eip.nat" -> "[root] module.vpc.var.create_vpc"
		"[root] module.vpc.aws_eip.nat" -> "[root] module.vpc.var.enable_nat_gateway"
		"[root] module.vpc.aws_eip.nat" -> "[root] module.vpc.var.name"
		"[root] module.vpc.aws_eip.nat" -> "[root] module.vpc.var.nat_eip_tags"
		"[root] module.vpc.aws_eip.nat" -> "[root] module.vpc.var.reuse_nat_ips"
		"[root] module.vpc.aws_eip.nat" -> "[root] module.vpc.var.tags"
		"[root] module.vpc.aws_eip.nat" -> "[root] provider.aws"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache" -> "[root] module.vpc.aws_subnet.elasticache"
		"[root] module.vpc.aws_internet_gateway.this" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_internet_gateway.this" -> "[root] module.vpc.var.igw_tags"
		"[root] module.vpc.aws_internet_gateway.this" -> "[root] module.vpc.var.public_subnets"
		"[root] module.vpc.aws_nat_gateway.this" -> "[root] module.vpc.aws_internet_gateway.this"
		"[root] module.vpc.aws_nat_gateway.this" -> "[root] module.vpc.aws_subnet.public"
		"[root] module.vpc.aws_nat_gateway.this" -> "[root] module.vpc.local.nat_gateway_ips"
		"[root] module.vpc.aws_nat_gateway.this" -> "[root] module.vpc.var.nat_gateway_tags"
		"[root] module.vpc.aws_redshift_subnet_group.redshift" -> "[root] module.vpc.aws_subnet.redshift"
		"[root] module.vpc.aws_redshift_subnet_group.redshift" -> "[root] module.vpc.var.redshift_subnet_group_tags"
		"[root] module.vpc.aws_route.database_internet_gateway" -> "[root] module.vpc.aws_internet_gateway.this"
		"[root] module.vpc.aws_route.database_internet_gateway" -> "[root] module.vpc.aws_route_table.database"
		"[root] module.vpc.aws_route.database_internet_gateway" -> "[root] module.vpc.var.create_database_internet_gateway_route"
		"[root] module.vpc.aws_route.private_nat_gateway" -> "[root] module.vpc.aws_nat_gateway.this"
		"[root] module.vpc.aws_route.private_nat_gateway" -> "[root] module.vpc.aws_route_table.private"
		"[root] module.vpc.aws_route.public_internet_gateway" -> "[root] module.vpc.aws_internet_gateway.this"
		"[root] module.vpc.aws_route.public_internet_gateway" -> "[root] module.vpc.aws_route_table.public"
		"[root] module.vpc.aws_route_table.database" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_route_table.database" -> "[root] module.vpc.var.create_database_subnet_route_table"
		"[root] module.vpc.aws_route_table.database" -> "[root] module.vpc.var.database_route_table_tags"
		"[root] module.vpc.aws_route_table.database" -> "[root] module.vpc.var.database_subnet_suffix"
		"[root] module.vpc.aws_route_table.database" -> "[root] module.vpc.var.database_subnets"
		"[root] module.vpc.aws_route_table.elasticache" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_route_table.elasticache" -> "[root] module.vpc.var.create_elasticache_subnet_route_table"
		"[root] module.vpc.aws_route_table.elasticache" -> "[root] module.vpc.var.elasticache_route_table_tags"
		"[root] module.vpc.aws_route_table.elasticache" -> "[root] module.vpc.var.elasticache_subnet_suffix"
		"[root] module.vpc.aws_route_table.elasticache" -> "[root] module.vpc.var.elasticache_subnets"
		"[root] module.vpc.aws_route_table.intra" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_route_table.intra" -> "[root] module.vpc.var.intra_route_table_tags"
		"[root] module.vpc.aws_route_table.intra" -> "[root] module.vpc.var.intra_subnets"
		"[root] module.vpc.aws_route_table.private" -> "[root] module.vpc.local.nat_gateway_count"
		"[root] module.vpc.aws_route_table.private" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_route_table.private" -> "[root] module.vpc.var.private_route_table_tags"
		"[root] module.vpc.aws_route_table.private" -> "[root] module.vpc.var.private_subnet_suffix"
		"[root] module.vpc.aws_route_table.public" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_route_table.public" -> "[root] module.vpc.var.public_route_table_tags"
		"[root] module.vpc.aws_route_table.public" -> "[root] module.vpc.var.public_subnet_suffix"
		"[root] module.vpc.aws_route_table.public" -> "[root] module.vpc.var.public_subnets"
		"[root] module.vpc.aws_route_table.redshift" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_route_table.redshift" -> "[root] module.vpc.var.create_redshift_subnet_route_table"
		"[root] module.vpc.aws_route_table.redshift" -> "[root] module.vpc.var.redshift_route_table_tags"
		"[root] module.vpc.aws_route_table.redshift" -> "[root] module.vpc.var.redshift_subnet_suffix"
		"[root] module.vpc.aws_route_table.redshift" -> "[root] module.vpc.var.redshift_subnets"
		"[root] module.vpc.aws_route_table_association.database" -> "[root] module.vpc.aws_route_table.database"
		"[root] module.vpc.aws_route_table_association.database" -> "[root] module.vpc.aws_route_table.private"
		"[root] module.vpc.aws_route_table_association.database" -> "[root] module.vpc.aws_subnet.database"
		"[root] module.vpc.aws_route_table_association.elasticache" -> "[root] module.vpc.aws_route_table.elasticache"
		"[root] module.vpc.aws_route_table_association.elasticache" -> "[root] module.vpc.aws_route_table.private"
		"[root] module.vpc.aws_route_table_association.elasticache" -> "[root] module.vpc.aws_subnet.elasticache"
		"[root] module.vpc.aws_route_table_association.intra" -> "[root] module.vpc.aws_route_table.intra"
		"[root] module.vpc.aws_route_table_association.intra" -> "[root] module.vpc.aws_subnet.intra"
		"[root] module.vpc.aws_route_table_association.private" -> "[root] module.vpc.aws_route_table.private"
		"[root] module.vpc.aws_route_table_association.private" -> "[root] module.vpc.aws_subnet.private"
		"[root] module.vpc.aws_route_table_association.public" -> "[root] module.vpc.aws_route_table.public"
		"[root] module.vpc.aws_route_table_association.public" -> "[root] module.vpc.aws_subnet.public"
		"[root] module.vpc.aws_route_table_association.redshift" -> "[root] module.vpc.aws_route_table.private"
		"[root] module.vpc.aws_route_table_association.redshift" -> "[root] module.vpc.aws_route_table.redshift"
		"[root] module.vpc.aws_route_table_association.redshift" -> "[root] module.vpc.aws_subnet.redshift"
		"[root] module.vpc.aws_subnet.database" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_subnet.database" -> "[root] module.vpc.var.azs"
		"[root] module.vpc.aws_subnet.database" -> "[root] module.vpc.var.database_subnet_suffix"
		"[root] module.vpc.aws_subnet.database" -> "[root] module.vpc.var.database_subnet_tags"
		"[root] module.vpc.aws_subnet.database" -> "[root] module.vpc.var.database_subnets"
		"[root] module.vpc.aws_subnet.elasticache" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_subnet.elasticache" -> "[root] module.vpc.var.azs"
		"[root] module.vpc.aws_subnet.elasticache" -> "[root] module.vpc.var.elasticache_subnet_suffix"
		"[root] module.vpc.aws_subnet.elasticache" -> "[root] module.vpc.var.elasticache_subnet_tags"
		"[root] module.vpc.aws_subnet.elasticache" -> "[root] module.vpc.var.elasticache_subnets"
		"[root] module.vpc.aws_subnet.intra" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_subnet.intra" -> "[root] module.vpc.var.azs"
		"[root] module.vpc.aws_subnet.intra" -> "[root] module.vpc.var.intra_subnet_tags"
		"[root] module.vpc.aws_subnet.intra" -> "[root] module.vpc.var.intra_subnets"
		"[root] module.vpc.aws_subnet.private" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_subnet.private" -> "[root] module.vpc.var.azs"
		"[root] module.vpc.aws_subnet.private" -> "[root] module.vpc.var.private_subnet_suffix"
		"[root] module.vpc.aws_subnet.private" -> "[root] module.vpc.var.private_subnet_tags"
		"[root] module.vpc.aws_subnet.private" -> "[root] module.vpc.var.private_subnets"
		"[root] module.vpc.aws_subnet.public" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_subnet.public" -> "[root] module.vpc.var.azs"
		"[root] module.vpc.aws_subnet.public" -> "[root] module.vpc.var.map_public_ip_on_launch"
		"[root] module.vpc.aws_subnet.public" -> "[root] module.vpc.var.one_nat_gateway_per_az"
		"[root] module.vpc.aws_subnet.public" -> "[root] module.vpc.var.public_subnet_suffix"
		"[root] module.vpc.aws_subnet.public" -> "[root] module.vpc.var.public_subnet_tags"
		"[root] module.vpc.aws_subnet.public" -> "[root] module.vpc.var.public_subnets"
		"[root] module.vpc.aws_subnet.redshift" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_subnet.redshift" -> "[root] module.vpc.var.azs"
		"[root] module.vpc.aws_subnet.redshift" -> "[root] module.vpc.var.redshift_subnet_suffix"
		"[root] module.vpc.aws_subnet.redshift" -> "[root] module.vpc.var.redshift_subnet_tags"
		"[root] module.vpc.aws_subnet.redshift" -> "[root] module.vpc.var.redshift_subnets"
		"[root] module.vpc.aws_vpc.this" -> "[root] module.vpc.var.assign_generated_ipv6_cidr_block"
		"[root] module.vpc.aws_vpc.this" -> "[root] module.vpc.var.cidr"
		"[root] module.vpc.aws_vpc.this" -> "[root] module.vpc.var.create_vpc"
		"[root] module.vpc.aws_vpc.this" -> "[root] module.vpc.var.enable_dns_hostnames"
		"[root] module.vpc.aws_vpc.this" -> "[root] module.vpc.var.enable_dns_support"
		"[root] module.vpc.aws_vpc.this" -> "[root] module.vpc.var.instance_tenancy"
		"[root] module.vpc.aws_vpc.this" -> "[root] module.vpc.var.name"
		"[root] module.vpc.aws_vpc.this" -> "[root] module.vpc.var.tags"
		"[root] module.vpc.aws_vpc.this" -> "[root] module.vpc.var.vpc_tags"
		"[root] module.vpc.aws_vpc.this" -> "[root] provider.aws"
		"[root] module.vpc.aws_vpc_dhcp_options.this" -> "[root] module.vpc.var.create_vpc"
		"[root] module.vpc.aws_vpc_dhcp_options.this" -> "[root] module.vpc.var.dhcp_options_domain_name"
		"[root] module.vpc.aws_vpc_dhcp_options.this" -> "[root] module.vpc.var.dhcp_options_domain_name_servers"
		"[root] module.vpc.aws_vpc_dhcp_options.this" -> "[root] module.vpc.var.dhcp_options_netbios_name_servers"
		"[root] module.vpc.aws_vpc_dhcp_options.this" -> "[root] module.vpc.var.dhcp_options_netbios_node_type"
		"[root] module.vpc.aws_vpc_dhcp_options.this" -> "[root] module.vpc.var.dhcp_options_ntp_servers"
		"[root] module.vpc.aws_vpc_dhcp_options.this" -> "[root] module.vpc.var.dhcp_options_tags"
		"[root] module.vpc.aws_vpc_dhcp_options.this" -> "[root] module.vpc.var.enable_dhcp_options"
		"[root] module.vpc.aws_vpc_dhcp_options.this" -> "[root] module.vpc.var.name"
		"[root] module.vpc.aws_vpc_dhcp_options.this" -> "[root] module.vpc.var.tags"
		"[root] module.vpc.aws_vpc_dhcp_options.this" -> "[root] provider.aws"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this" -> "[root] module.vpc.aws_vpc_dhcp_options.this"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_vpc_endpoint.dynamodb" -> "[root] module.vpc.data.aws_vpc_endpoint_service.dynamodb"
		"[root] module.vpc.aws_vpc_endpoint.dynamodb" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_vpc_endpoint.s3" -> "[root] module.vpc.data.aws_vpc_endpoint_service.s3"
		"[root] module.vpc.aws_vpc_endpoint.s3" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb" -> "[root] module.vpc.aws_route_table.intra"
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb" -> "[root] module.vpc.aws_vpc_endpoint.dynamodb"
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.intra_s3" -> "[root] module.vpc.aws_route_table.intra"
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.intra_s3" -> "[root] module.vpc.aws_vpc_endpoint.s3"
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb" -> "[root] module.vpc.aws_route_table.private"
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb" -> "[root] module.vpc.aws_vpc_endpoint.dynamodb"
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.private_s3" -> "[root] module.vpc.aws_route_table.private"
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.private_s3" -> "[root] module.vpc.aws_vpc_endpoint.s3"
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb" -> "[root] module.vpc.aws_route_table.public"
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb" -> "[root] module.vpc.aws_vpc_endpoint.dynamodb"
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.public_s3" -> "[root] module.vpc.aws_route_table.public"
		"[root] module.vpc.aws_vpc_endpoint_route_table_association.public_s3" -> "[root] module.vpc.aws_vpc_endpoint.s3"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this" -> "[root] module.vpc.aws_vpc.this"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this" -> "[root] module.vpc.var.secondary_cidr_blocks"
		"[root] module.vpc.aws_vpn_gateway.this" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_vpn_gateway.this" -> "[root] module.vpc.var.amazon_side_asn"
		"[root] module.vpc.aws_vpn_gateway.this" -> "[root] module.vpc.var.enable_vpn_gateway"
		"[root] module.vpc.aws_vpn_gateway.this" -> "[root] module.vpc.var.vpn_gateway_tags"
		"[root] module.vpc.aws_vpn_gateway_attachment.this" -> "[root] module.vpc.local.vpc_id"
		"[root] module.vpc.aws_vpn_gateway_attachment.this" -> "[root] module.vpc.var.vpn_gateway_id"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private" -> "[root] module.vpc.aws_route_table.private"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private" -> "[root] module.vpc.aws_vpn_gateway.this"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private" -> "[root] module.vpc.aws_vpn_gateway_attachment.this"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private" -> "[root] module.vpc.var.propagate_private_route_tables_vgw"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public" -> "[root] module.vpc.aws_route_table.public"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public" -> "[root] module.vpc.aws_vpn_gateway.this"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public" -> "[root] module.vpc.aws_vpn_gateway_attachment.this"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public" -> "[root] module.vpc.var.propagate_public_route_tables_vgw"
		"[root] module.vpc.data.aws_vpc_endpoint_service.dynamodb" -> "[root] module.vpc.var.create_vpc"
		"[root] module.vpc.data.aws_vpc_endpoint_service.dynamodb" -> "[root] module.vpc.var.enable_dynamodb_endpoint"
		"[root] module.vpc.data.aws_vpc_endpoint_service.dynamodb" -> "[root] provider.aws"
		"[root] module.vpc.data.aws_vpc_endpoint_service.s3" -> "[root] module.vpc.var.create_vpc"
		"[root] module.vpc.data.aws_vpc_endpoint_service.s3" -> "[root] module.vpc.var.enable_s3_endpoint"
		"[root] module.vpc.data.aws_vpc_endpoint_service.s3" -> "[root] provider.aws"
		"[root] module.vpc.local.max_subnet_length" -> "[root] module.vpc.var.database_subnets"
		"[root] module.vpc.local.max_subnet_length" -> "[root] module.vpc.var.elasticache_subnets"
		"[root] module.vpc.local.max_subnet_length" -> "[root] module.vpc.var.private_subnets"
		"[root] module.vpc.local.max_subnet_length" -> "[root] module.vpc.var.redshift_subnets"
		"[root] module.vpc.local.nat_gateway_count" -> "[root] module.vpc.local.max_subnet_length"
		"[root] module.vpc.local.nat_gateway_count" -> "[root] module.vpc.var.azs"
		"[root] module.vpc.local.nat_gateway_count" -> "[root] module.vpc.var.one_nat_gateway_per_az"
		"[root] module.vpc.local.nat_gateway_count" -> "[root] module.vpc.var.single_nat_gateway"
		"[root] module.vpc.local.nat_gateway_ips" -> "[root] module.vpc.aws_eip.nat"
		"[root] module.vpc.local.nat_gateway_ips" -> "[root] module.vpc.var.external_nat_ip_ids"
		"[root] module.vpc.local.vpc_id" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this"
		"[root] module.vpc.output.database_route_table_ids" -> "[root] module.vpc.aws_route_table.database"
		"[root] module.vpc.output.database_route_table_ids" -> "[root] module.vpc.aws_route_table.private"
		"[root] module.vpc.output.database_subnet_group" -> "[root] module.vpc.aws_db_subnet_group.database"
		"[root] module.vpc.output.database_subnets" -> "[root] module.vpc.aws_subnet.database"
		"[root] module.vpc.output.database_subnets_cidr_blocks" -> "[root] module.vpc.aws_subnet.database"
		"[root] module.vpc.output.default_network_acl_id" -> "[root] module.vpc.aws_vpc.this"
		"[root] module.vpc.output.default_route_table_id" -> "[root] module.vpc.aws_vpc.this"
		"[root] module.vpc.output.default_security_group_id" -> "[root] module.vpc.aws_vpc.this"
		"[root] module.vpc.output.default_vpc_cidr_block" -> "[root] module.vpc.aws_default_vpc.this"
		"[root] module.vpc.output.default_vpc_default_network_acl_id" -> "[root] module.vpc.aws_default_vpc.this"
		"[root] module.vpc.output.default_vpc_default_route_table_id" -> "[root] module.vpc.aws_default_vpc.this"
		"[root] module.vpc.output.default_vpc_default_security_group_id" -> "[root] module.vpc.aws_default_vpc.this"
		"[root] module.vpc.output.default_vpc_enable_dns_hostnames" -> "[root] module.vpc.aws_default_vpc.this"
		"[root] module.vpc.output.default_vpc_enable_dns_support" -> "[root] module.vpc.aws_default_vpc.this"
		"[root] module.vpc.output.default_vpc_id" -> "[root] module.vpc.aws_default_vpc.this"
		"[root] module.vpc.output.default_vpc_instance_tenancy" -> "[root] module.vpc.aws_default_vpc.this"
		"[root] module.vpc.output.default_vpc_main_route_table_id" -> "[root] module.vpc.aws_default_vpc.this"
		"[root] module.vpc.output.elasticache_route_table_ids" -> "[root] module.vpc.aws_route_table.elasticache"
		"[root] module.vpc.output.elasticache_route_table_ids" -> "[root] module.vpc.aws_route_table.private"
		"[root] module.vpc.output.elasticache_subnet_group" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache"
		"[root] module.vpc.output.elasticache_subnet_group_name" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache"
		"[root] module.vpc.output.elasticache_subnets" -> "[root] module.vpc.aws_subnet.elasticache"
		"[root] module.vpc.output.elasticache_subnets_cidr_blocks" -> "[root] module.vpc.aws_subnet.elasticache"
		"[root] module.vpc.output.igw_id" -> "[root] module.vpc.aws_internet_gateway.this"
		"[root] module.vpc.output.intra_route_table_ids" -> "[root] module.vpc.aws_route_table.intra"
		"[root] module.vpc.output.intra_subnets" -> "[root] module.vpc.aws_subnet.intra"
		"[root] module.vpc.output.intra_subnets_cidr_blocks" -> "[root] module.vpc.aws_subnet.intra"
		"[root] module.vpc.output.nat_ids" -> "[root] module.vpc.aws_eip.nat"
		"[root] module.vpc.output.nat_public_ips" -> "[root] module.vpc.aws_eip.nat"
		"[root] module.vpc.output.natgw_ids" -> "[root] module.vpc.aws_nat_gateway.this"
		"[root] module.vpc.output.private_route_table_ids" -> "[root] module.vpc.aws_route_table.private"
		"[root] module.vpc.output.private_subnets" -> "[root] module.vpc.aws_subnet.private"
		"[root] module.vpc.output.private_subnets_cidr_blocks" -> "[root] module.vpc.aws_subnet.private"
		"[root] module.vpc.output.public_route_table_ids" -> "[root] module.vpc.aws_route_table.public"
		"[root] module.vpc.output.public_subnets" -> "[root] module.vpc.aws_subnet.public"
		"[root] module.vpc.output.public_subnets_cidr_blocks" -> "[root] module.vpc.aws_subnet.public"
		"[root] module.vpc.output.redshift_route_table_ids" -> "[root] module.vpc.aws_route_table.private"
		"[root] module.vpc.output.redshift_route_table_ids" -> "[root] module.vpc.aws_route_table.redshift"
		"[root] module.vpc.output.redshift_subnet_group" -> "[root] module.vpc.aws_redshift_subnet_group.redshift"
		"[root] module.vpc.output.redshift_subnets" -> "[root] module.vpc.aws_subnet.redshift"
		"[root] module.vpc.output.redshift_subnets_cidr_blocks" -> "[root] module.vpc.aws_subnet.redshift"
		"[root] module.vpc.output.vgw_id" -> "[root] module.vpc.aws_vpn_gateway.this"
		"[root] module.vpc.output.vgw_id" -> "[root] module.vpc.aws_vpn_gateway_attachment.this"
		"[root] module.vpc.output.vpc_cidr_block" -> "[root] module.vpc.aws_vpc.this"
		"[root] module.vpc.output.vpc_enable_dns_hostnames" -> "[root] module.vpc.aws_vpc.this"
		"[root] module.vpc.output.vpc_enable_dns_support" -> "[root] module.vpc.aws_vpc.this"
		"[root] module.vpc.output.vpc_endpoint_dynamodb_id" -> "[root] module.vpc.aws_vpc_endpoint.dynamodb"
		"[root] module.vpc.output.vpc_endpoint_dynamodb_pl_id" -> "[root] module.vpc.aws_vpc_endpoint.dynamodb"
		"[root] module.vpc.output.vpc_endpoint_s3_id" -> "[root] module.vpc.aws_vpc_endpoint.s3"
		"[root] module.vpc.output.vpc_endpoint_s3_pl_id" -> "[root] module.vpc.aws_vpc_endpoint.s3"
		"[root] module.vpc.output.vpc_id" -> "[root] module.vpc.aws_vpc.this"
		"[root] module.vpc.output.vpc_instance_tenancy" -> "[root] module.vpc.aws_vpc.this"
		"[root] module.vpc.output.vpc_main_route_table_id" -> "[root] module.vpc.aws_vpc.this"
		"[root] module.vpc.output.vpc_secondary_cidr_blocks" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this"
		"[root] output.database_subnets" -> "[root] module.vpc.output.database_subnets"
		"[root] output.elasticache_subnets" -> "[root] module.vpc.output.elasticache_subnets"
		"[root] output.intra_subnets" -> "[root] module.vpc.output.intra_subnets"
		"[root] output.nat_public_ips" -> "[root] module.vpc.output.nat_public_ips"
		"[root] output.private_subnets" -> "[root] module.vpc.output.private_subnets"
		"[root] output.public_subnets" -> "[root] module.vpc.output.public_subnets"
		"[root] output.redshift_subnets" -> "[root] module.vpc.output.redshift_subnets"
		"[root] output.vpc_id" -> "[root] module.vpc.output.vpc_id"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_db_subnet_group.database"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_default_vpc.this"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_route.database_internet_gateway"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_route.private_nat_gateway"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_route.public_internet_gateway"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_route_table_association.database"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_route_table_association.elasticache"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_route_table_association.intra"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_route_table_association.private"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_route_table_association.public"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_route_table_association.redshift"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_vpc_endpoint_route_table_association.intra_s3"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_vpc_endpoint_route_table_association.private_s3"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_vpc_endpoint_route_table_association.public_s3"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private"
		"[root] provider.aws (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public"
		"[root] root" -> "[root] meta.count-boundary (count boundary fixup)"
		"[root] root" -> "[root] provider.aws (close)"
	}
}

